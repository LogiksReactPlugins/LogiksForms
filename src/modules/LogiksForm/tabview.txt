   <div className="p-8 max-w-6xl mx-auto">
  {/* Header with gradient background */}
  <div className="relative mb-8">
    <div className="absolute inset-0 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl opacity-50"></div>
    <div className="relative p-6">
      <h2 className="text-3xl font-bold bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent">
        {title}
      </h2>
      <p className="text-gray-600 mt-2">Configure your settings with our intuitive interface</p>
    </div>
  </div>

  {/* Modern Tab Navigation */}
  <div className="relative mb-8">
    {/* Background pill that slides */}
    <div className="relative bg-gray-100 rounded-2xl p-2 shadow-inner">
      <div 
        className="absolute top-2 bottom-2 bg-white rounded-xl shadow-lg transition-all duration-300 ease-out"
        style={{
          width: `${100 / groupNames.length}%`,
          left: `${(groupNames.indexOf(activeTab) * 100) / groupNames.length}%`
        }}
      ></div>
      
      {/* Tab buttons */}
      <nav className="relative flex">
        {groupNames.map((group, index) => (
          <button
            key={group}
            type="button"
            onClick={() => setActiveTab(group)}
            className={`relative flex-1 py-4 px-6 rounded-xl text-sm font-semibold transition-all duration-300 ease-out focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 ${
              activeTab === group
                ? 'text-blue-700 shadow-sm'
                : 'text-gray-600 hover:text-gray-800'
            }`}
          >
            <span className="relative z-10 flex items-center justify-center gap-2">
              {/* Add icons based on common tab names */}
              {group.toLowerCase().includes('general') && (
                <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                </svg>
              )}
              {group.toLowerCase().includes('security') && (
                <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                </svg>
              )}
              {group.toLowerCase().includes('notification') && (
                <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 17h5l-5 5v-5zM4 19h10" />
                </svg>
              )}
              {!group.toLowerCase().includes('general') && !group.toLowerCase().includes('security') && !group.toLowerCase().includes('notification') && (
                <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              )}
              {group}
            </span>
          </button>
        ))}
      </nav>
    </div>
  </div>

  {/* Content Area with Animation */}
  <div className="relative">
    <div 
      key={activeTab}
      className="bg-white rounded-3xl shadow-xl border border-gray-100 p-8 animate-in fade-in duration-300"
    >
      {/* Content Header */}
      <div className="flex items-center gap-3 mb-6 pb-4 border-b border-gray-100">
        <div className="w-8 h-8 bg-gradient-to-r from-blue-500 to-indigo-500 rounded-lg flex items-center justify-center">
          <svg className="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 10V3L4 14h7v7l9-11h-7z" />
          </svg>
        </div>
        <div>
          <h3 className="text-xl font-semibold text-gray-900">{activeTab} Settings</h3>
          <p className="text-sm text-gray-500">Manage your {activeTab.toLowerCase()} preferences</p>
        </div>
      </div>

      {/* Fields Container */}
      <div className="space-y-6">
        {groupedFields[activeTab].map((field, index) => (
          <div 
            key={field.name}
            className="transform transition-all duration-200 hover:translate-x-1"
            style={{ animationDelay: `${index * 50}ms` }}
          >
            <div className="p-4 rounded-2xl border border-gray-100 hover:border-gray-200 hover:shadow-md transition-all duration-200 bg-gradient-to-r from-gray-50/50 to-white">
              <FieldRenderer field={field} />
            </div>
          </div>
        ))}
      </div>

      {/* Progress Indicator */}
      <div className="mt-8 pt-6 border-t border-gray-100">
        <div className="flex items-center justify-between text-sm text-gray-500">
          <span>Tab {groupNames.indexOf(activeTab) + 1} of {groupNames.length}</span>
          <div className="flex gap-1">
            {groupNames.map((_, index) => (
              <div 
                key={index}
                className={`w-2 h-2 rounded-full transition-all duration-300 ${
                  index === groupNames.indexOf(activeTab) 
                    ? 'bg-blue-500 w-6' 
                    : 'bg-gray-300'
                }`}
              ></div>
            ))}
          </div>
        </div>
      </div>
    </div>
  </div>
</div>